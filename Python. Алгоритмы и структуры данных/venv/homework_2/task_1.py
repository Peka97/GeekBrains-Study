"""
Задание 1.	Написать программу, которая будет складывать, вычитать,
умножать или делить два числа. Числа и знак операции вводятся пользователем.
После выполнения вычисления программа не должна завершаться, а должна
запрашивать новые данные для вычислений. Завершение программы должно
выполняться при вводе символа '0' в качестве знака операции. Если пользователь
вводит неверный знак (не '0', '+', '-', '*', '/'), то программа должна
сообщать ему об ошибке и снова запрашивать знак операции.
Также сообщать пользователю о невозможности деления на ноль,
если он ввел 0 в качестве делителя.
Подсказка:
Вариант исполнения:
- условие рекурсивного вызова - введена операция +, -, *, / - ШАГ РЕКУРСИИ
- условие завершения рекурсии - введена операция 0 - БАЗОВЫЙ СЛУЧАЙ
Решите через рекурсию. В задании нельзя применять циклы.
Пример:
Введите операцию (+, -, *, / или 0 для выхода): +
Введите первое число: 214
Введите второе число: 234
Ваш результат 448
Введите операцию (+, -, *, / или 0 для выхода): -
Введите первое число: вп
Вы вместо трехзначного числа ввели строку (((. Исправьтесь
Введите операцию (+, -, *, / или 0 для выхода):
"""


def calc(sigh=None, number_1=None, number_2=None, result=None) -> str | None:
    # Шаг рекурсии
    if sigh is None:
        if result:
            print(f"Ваш результат: {result}")
        sigh = input("Введите операцию (+, -, *, / или 0 для выхода): ")
        return calc(sigh)
        # Базовый случай
    elif sigh == '0':
        return None
    elif sigh not in ['+', '-', '*', '/']:
        print('Ошибка ввода. Повторите запрос')
        return calc()
    else:
        if number_1 is None:
            number_1 = input('Введите первое число: ')
            # Шаг рекурсии
            if number_1.isdigit():
                return calc(sigh, number_1)
            else:
                print('Ошибка ввода. Повторите запрос')
                return calc()
        elif number_2 is None:
            number_2 = input('Введите второе число: ')
            # Шаг рекурсии
            if number_2.isdigit() and (sigh != '/' or number_2 != '0'):
                return calc(sigh, number_1, number_2)
            else:
                print('Ошибка ввода. Повторите запрос')
                return calc()
        else:
            result = eval(f'{number_1}{sigh}{number_2}')
            return calc(result=result)


if __name__ == '__main__':
    calc()
