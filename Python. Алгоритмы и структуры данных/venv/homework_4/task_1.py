"""
Задание 1.
Приведен код, который позволяет сохранить в
массиве индексы четных элементов другого массива
Сделайте замеры времени выполнения кода с помощью модуля timeit
Попробуйте оптимизировать код, чтобы снизить время выполнения
Проведите повторные замеры
ОБЯЗАТЕЛЬНО! Добавьте аналитику: что вы сделали и какой это принесло эффект
"""
from timeit import timeit


def func_1(nums):
    new_arr = []
    for i in range(len(nums)):
        if nums[i] % 2 == 0:
            new_arr.append(i)
    return new_arr


def func_2(nums):
    # Замена list на lс + избавление от метода append и лишней переменной new_arr привело к ускорению алгоритма
    # Плюс в одну строчку выглядит лаконичнее
    return [i for i in range(len(nums)) if nums[i] % 2 == 0]


if __name__ == '__main__':
    n = range(10000)
    print(timeit('func_1(n)', globals=globals(), number=10000))  # -> ~11.6632
    print(timeit('func_2(n)', globals=globals(), number=10000))  # -> ~10.3154
    # После замеров мы видим, что новая функция при замерах на больших значениях массива работает значительно быстрее

