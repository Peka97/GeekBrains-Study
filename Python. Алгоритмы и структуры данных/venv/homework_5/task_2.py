"""
Задание 2.

Написать программу сложения и умножения двух шестнадцатеричных чисел.
При этом каждое число представляется как массив,
элементы которого это цифры числа.
Например, пользователь ввёл A2 и C4F.
Сохранить их как [‘A’, ‘2’] и [‘C’, ‘4’, ‘F’] соответственно.
Сумма чисел из примера: [‘C’, ‘F’, ‘1’],
произведение - [‘7’, ‘C’, ‘9’, ‘F’, ‘E’].

Подсказка:
Попытайтесь решить это задание в двух вариантах
1) через collections

defaultdict(list)
int(, 16)
reduce

2) через ООП

вспомните про перегрузку методов

__mul__
__add__
"""
from collections import defaultdict


def mul_and_add():
    d = defaultdict(list)
    num_1 = input('Введите первое число: ')
    d[int(num_1, 16)] = list(num_1)
    num_2 = input('Введите второе число: ')
    d[int(num_2, 16)] = list(num_2)
    d[f'{int(num_1, 16)} + {int(num_2, 16)}'] = list(str(hex(int(num_1, 16) + int(num_2, 16))).lstrip('0x').upper())
    d[f'{int(num_1, 16)} * {int(num_2, 16)}'] = list(str(hex(int(num_1, 16) * int(num_2, 16))).lstrip('0x').upper())
    for key, val in d.items():
        print(key, val)


if __name__ == '__main__':
    # Не понял к чему здесь словарь, как и абсолютно не понял зачем здесь вообще какие-то коллекции, задача решается
    # спокойно без них. В ООП понимаю, но тут бросил, ибо этот словарь только усложнял мне решение.
    mul_and_add()
